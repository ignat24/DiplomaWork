from math import *

def length_two_points(x1,y1,x2,y2):
    return ((x2 - x1)**2 + (y2-y1)**2)**1/2


start_points_9 = [[1,3],[1,4], [1,5], [1, 5.5], [1,6.5],[1,7], [2, 6.5], [2.5, 6], [2, 5.5]]
final_points_9 = [[7,3],[7,5], [7,7], [8, 6], [8.5,5],[9,6], [10, 7], [10, 5], [10, 3]]

final_points_100 = [[6, 3.2], [6, 3.4], [6, 3.6], [6, 3.8], [6, 4.0], [6, 4.2], [6, 4.4], [6, 4.6], [6, 4.8], [6, 5.0], [6, 5.2], [6, 5.4], [6, 5.6], [6, 5.8], [6, 6.0], [6, 6.2], [6, 6.4], [6, 6.6], [6, 6.8], [6, 7.0], [6, 7.2], [6, 7.4], [6, 7.6], [6, 7.8], [6, 8.0], [6.2, 8.2], [6.4, 8.2], [6.6, 8.2], [6.8, 8.2], [7.0, 8.2], [7.2, 8.2], [7.4, 8.2], [7.6, 8.2], [7.8, 8.2], [8.0, 8.2], [8.2, 8.2], [8.4, 8.2], [8.6, 8.2], [8.8, 8.2], [9.0, 8.2], [9.2, 8.2], [9.4, 8.2], [9.6, 8.2], [9.8, 8.2], [10.0, 8.2], [10.2, 8.2], [10.4, 8.2], [10.6, 8.2], [10.8, 8.2], [11.0, 8.2], [11, 8.0], [11, 7.8], [11, 7.6], [11, 7.4], [11, 7.2], [11, 7.0], [11, 
6.8], [11, 6.6], [11, 6.4], [11, 6.2], [11, 6.0], [11, 5.8], [11, 5.6], [11, 5.4], [11, 5.2], [11, 5.0], [11, 4.8], [11, 4.6], [11, 4.4], [11, 4.2], [11, 4.0], [11, 3.8], [11, 3.6], [11, 3.4], [11, 3.2], [10.8, 3], [10.6, 3], [10.4, 3], [10.2, 3], [10.0, 3], [9.8, 3], [9.6, 3], [9.4, 3], [9.2, 3], [9.0, 3], [8.8, 3], [8.6, 3], [8.4, 3], [8.2, 3], [8.0, 3], [7.8, 3], [7.6, 3], [7.4, 3], [7.2, 3], [7.0, 3], [6.8, 3], [6.6, 3], [6.4, 3], [6.2, 3], [6.0, 3]]
start_points_100 = [[2, 1.2], [2, 1.4], [2, 1.6], [2, 1.8], [2, 2.0], [2, 2.2], [2, 2.4], [2, 2.6], [2, 2.8], [2, 3.0], [2, 3.2], [2, 3.4], [2, 3.6], [2, 3.8], [2, 4.0], [2, 4.2], [2, 4.4], [2, 4.6], [2, 4.8], [2, 5.0], [2, 5.2], [2, 5.4], [2, 5.6], [2, 5.8], [2, 6.0], [2, 6.2], [2, 6.4], [2, 6.6], [2, 6.8], [2, 7.0], [2, 7.2], [2, 7.4], [2, 7.6], [2, 7.8], [2, 8.0], [2, 8.2], [2, 8.4], [2, 8.6], [2, 8.8], [2, 9.0], [2, 9.2], [2, 9.4], [2, 9.6], [2, 9.8], [2, 10.0], [2, 10.2], [2, 10.4], [2, 10.6], [2, 10.8], [2, 11.0], [2, 11.2], [2, 11.4], [2, 11.6], [2, 11.8], [2, 12.0], [2, 12.2], [2, 12.4], [2, 12.6], [2, 12.8], [2, 13.0], [2, 13.2], 
[2, 13.4], [2, 13.6], [2, 13.8], [2, 14.0], [2, 14.2], [2, 14.4], [2, 14.6], [2, 14.8], [2, 15.0], [2, 15.2], [2, 15.4], [2, 15.6], [2, 15.8], [2, 16.0], [2, 16.2], [2, 16.4], [2, 16.6], [2, 16.8], [2, 17.0], [2, 17.2], [2, 17.4], [2, 17.6], [2, 17.8], [2, 18.0], [2, 18.2], [2, 18.4], [2, 18.6], [2, 18.8], [2, 19.0], [2, 19.2], [2, 19.4], [2, 19.6], [2, 19.8], [2, 20.0], [2, 20.2], [2, 20.4], [2, 20.6], [2, 20.8], [2, 21.0]]


start_points_5 = [[1,1],[1, 2.5], [1.5, 2], [2, 2.5],[2,1]]
final_points_5 = [[4.5,1.5], [5,1], [5.5,1.5], [5.5,2], [5,2.5]]

start_points = start_points_100
final_points = final_points_100

count_points = len(start_points)
length_matrix = []
for i in range(count_points):
    length_matrix.append([])

min_length_values = []

for i in range(count_points):
    x1 = start_points[i][0]
    y1 = start_points[i][1]
    for j in range(count_points):
        x2 = final_points[j][0]
        y2 = final_points[j][1]
        distance = length_two_points(x1, y1, x2, y2)
        length_matrix[j].append(round(distance,2))

for i in range(count_points):
    print(length_matrix[i])


for i in length_matrix:
    min_length_values.append(min(i))

tmax = max(min_length_values)

for i in range(len(length_matrix)):
    tmax = max(min_length_values)
    index_finish = min_length_values.index(tmax)
    try:
        index_start = length_matrix[index_finish].index(tmax)
    except:
        tmax = min(length_matrix[index_finish])
        index_start = length_matrix[index_finish].index(tmax)
    

    print(f"X{str(index_start+1)} --> X{str(index_finish + 1)}, distance = {tmax}")
    
    min_length_values[index_finish] = 0
    for i in range(count_points):
        length_matrix[i][index_start]= 10000


   


